// Code generated by ogen, DO NOT EDIT.

package api

// DeleteTodoByIdOK is response for DeleteTodoById operation.
type DeleteTodoByIdOK struct{}

// GetTodoByIdNotFound is response for GetTodoById operation.
type GetTodoByIdNotFound struct{}

func (*GetTodoByIdNotFound) getTodoByIdRes() {}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/Todo
type Todo struct {
	ID OptInt `json:"id"`
}

// GetID returns the value of ID.
func (s *Todo) GetID() OptInt {
	return s.ID
}

// SetID sets the value of ID.
func (s *Todo) SetID(val OptInt) {
	s.ID = val
}

func (*Todo) getTodoByIdRes() {}
